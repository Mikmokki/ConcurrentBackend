[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\mikko\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\mikko\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (IBM Corporation Java 1.8.0_352)
[debug]       Load.loadUnit: plugins took 69.5154ms
[debug]       Load.loadUnit: defsScala took 0.2076ms
[debug] [Loading] Scanning directory C:\Users\mikko\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mikko\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.0979 ms
[debug]           Load.resolveProject(global-plugins) took 36.6399ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\mikko\.sbt\1.0\plugins, plugins: List(<none>))) took 65.4288ms
[debug] [Loading] Done in C:\Users\mikko\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 82.1626ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2028ms
[debug]     Load.loadUnit(file:/C:/Users/mikko/.sbt/1.0/plugins/, ...) took 157.0489ms
[debug]   Load.apply: load took 320.7986ms
[debug]   Load.apply: resolveProjects took 4.8789ms
[debug]   Load.apply: finalTransforms took 88.4594ms
[debug]   Load.apply: config.delegates took 10.3224ms
[debug]   Load.apply: Def.make(settings)... took 591.649ms
[debug]   Load.apply: structureIndex took 121.263ms
[debug]   Load.apply: mkStreams took 1.2802ms
[info] loading global plugins from C:\Users\mikko\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5827.6485ms
[debug]           Load.loadUnit: plugins took 33.3822ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\mikko\Desktop\koodaus\ConcurrentBackend\project
[debug]             Load.loadUnit: mkEval took 3.7926ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mikko\Desktop\koodaus\ConcurrentBackend\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1776 ms
[info] loading settings for project concurrentbackend-build from idea.sbt ...
[debug]               Load.resolveProject(concurrentbackend-build) took 2.8314ms
[debug]             Load.loadTransitive: finalizeProject(Project(id concurrentbackend-build, base: C:\Users\mikko\Desktop\koodaus\ConcurrentBackend\project, plugins: List(<none>))) took 5.5405ms
[debug] [Loading] Done in C:\Users\mikko\Desktop\koodaus\ConcurrentBackend\project, returning: (concurrentbackend-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 141.2076ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.9044ms
[debug]         Load.loadUnit(file:/C:/Users/mikko/Desktop/koodaus/ConcurrentBackend/project/, ...) took 179.3767ms
[debug]       Load.apply: load took 180.7556ms
[debug]       Load.apply: resolveProjects took 0.138ms
[debug]       Load.apply: finalTransforms took 19.6401ms
[debug]       Load.apply: config.delegates took 0.3225ms
[debug]       Load.apply: Def.make(settings)... took 93.1636ms
[debug]       Load.apply: structureIndex took 36.5433ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\mikko\Desktop\koodaus\ConcurrentBackend\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
